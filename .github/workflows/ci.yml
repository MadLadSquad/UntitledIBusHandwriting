name: CI

env:
  BUILD_CONFIGURATION: Release
  CARGO_TERM_COLOR: always

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  Linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
          ref: master
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: true
          clean: false
          fetch-depth: 0
      - name: Get Dependencies
        shell: bash
        run: sudo apt-get update && sudo apt-get install x11-xserver-utils libgl1-mesa-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev gcc make g++ libxmu-dev libxi-dev libgl-dev libglu1-mesa-dev libvulkan1 mesa-vulkan-drivers vulkan-tools libvulkan-dev libasound2-dev libflac-dev libogg-dev libtool libvorbis-dev libopus-dev libsndfile1-dev libglew-dev libssl-dev zlib1g zlib1g-dev
      - name: Checkout Submodules
        shell: bash
        run: |
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
      - name: Install
        shell: bash
        run: ./ci.sh
      - name: "Import bot's GPG key for signing commits"
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.ACTION_COMMIT_SING_PRIVATE_KEY }}
          passphrase: ${{ secrets.ACTION_COMMIT_SING_PASS }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Update submodules
        id: mod
        run: |
          git config --global user.name "Madman10K"
          git config --global user.email "contact@madladsquad.com"
          git fetch --all
          git checkout auto || git checkout -b auto
      - name: Commit
        id: commit
        run: |
          (git add . && git commit -m "Update" && git push origin auto && echo "com=+" >> $GITHUB_OUTPUT) || echo "com=?" >> $GITHUB_OUTPUT
      - name: Create PR
        if: "steps.mod.outputs.out != '?' && steps.commit.outputs.com != '?'"
        uses: JasonEtco/create-an-issue@v2 
        env:
          GITHUB_TOKEN: ${{ secrets.ACTION_ISSUE_SECRET }}
        with:
          filename: .github/auto-issue-template.md
          update_existing: true
          search_existing: open
